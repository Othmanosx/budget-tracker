import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import type { FormEvent } from "react";
import HomeLayout from "~/Layouts/HomeLayout";
import ExpenseItem from "~/components/ExpenseItem/ExpenseItem";
import Plan from "~/components/Plan/Plan";
import { api } from "~/utils/api";

const Home: NextPage = () => {
  const utils = api.useContext();
  const { data: sessionData } = useSession();
  const { data, isLoading } = api.example.getExpenses.useQuery(undefined, {
    enabled: sessionData?.user !== undefined,
  });

  const isLoggedOut = !sessionData?.user;
  const { mutate, isLoading: isMutating } = api.example.addExpense.useMutation({
    async onSettled() {
      await utils.example.getExpenses.invalidate();
    },
  });

  const submit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    mutate({ name: "TV", cost: "300" });
  };
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HomeLayout title="Expenses">
        <Plan />
        <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[4rem]">
          Expenses
        </h1>
        <form onSubmit={submit}>
          <input required type="text" placeholder="name" name="name" />
          <input required type="text" placeholder="cost" name="cost" />
          <button type="submit">{isMutating ? "loading" : "submit"}</button>
        </form>
        <>
          {isLoggedOut ? (
            <div className="text-gray-500 dark:text-white">
              Please login first to see your expenses.
            </div>
          ) : isLoading ? (
            <div className="text-gray-500 dark:text-white">loading...</div>
          ) : null}
          {data && data?.length < 1 ? (
            <div className="text-gray-500 dark:text-white">
              You can add new items by tapping the plus icon below
            </div>
          ) : (
            <div className="flex w-full flex-col gap-2 pb-8">
              {data?.map((item) => (
                <ExpenseItem key={item.id} {...item} />
              ))}
            </div>
          )}
        </>
      </HomeLayout>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
